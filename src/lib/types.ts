
export interface Product {
  id: string;
  name: string;
  description?: string;
  price: number;
  imageUrl: string; 
  stock: number;
  category: string;
  dataAiHint?: string;
}

export interface Promotion {
  promotionMessage: string;
  discountedProductId?: string;
  discountPercentage?: number;
}

export interface EntryFormValues {
  date: Date;
  supplier: string;
  productId: string;
  quantity: number;
  unitPrice: number; // Represents the cost per unit
}

export interface Entry extends EntryFormValues {
  id: string;
  totalValue: number; // Represents total cost (quantity * unitPrice)
  productName?: string;
}

export interface SaleFormValues {
  date: Date;
  customer: string;
  productId: string;
  quantity: number;
  unitPrice: number; // Represents the selling price per unit
  discount: number;
}

export interface Sale extends SaleFormValues {
  id: string;
  totalValue: number; // Represents total revenue for this sale ((quantity * unitPrice) - discount)
  productName?: string;
}

// Used internally in RelatoriosPage for aggregation and initial mapping during data processing
export interface ProductAnalysisData {
  productId: string;
  productName: string;        // Product name
  unitsSold: number;          // Total units of this product sold
  totalRevenue: number;       // Total revenue generated by this product
  totalCost: number;          // Total estimated cost for the units of this product sold
  costCalculableSalesCount: number; // Number of sale records for this product for which a cost could be calculated
  totalSalesRecords: number;      // Total number of sale records for this product
}

// Used for displaying the profitability table in RelatoriosPage, derived from ProductAnalysisData
export interface SalesProfitData extends ProductAnalysisData {
  totalProfit: number;     // Total estimated profit for this product (Revenue - Cost)
  profitMargin: number;    // Profit margin percentage for this product
  costingCoverage: string; // String indicating cost calculation coverage (e.g., "5/5" or "3/5")
}

    